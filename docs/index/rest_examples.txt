============================
PUT http://localhost:9200/students/
{
   "mappings": {
     "properties": {
     "student": {
       "properties": {
         "name":     { "type": "keyword"  },
         "degree" :   { "type": "keyword" },
         "age":      { "type": "integer" },
         "performance": { "type": "keyword"}
         }
     }
     }
   }
 }

 will create index with type _doc and field student.name . student.degree and etc
 -----------------------
 DELETE http://localhost:9200/students/

 ---------------------

Better example - using explicit type name
 PUT http://localhost:9200/twitter/
 {
   "mappings": {
     "_doc": {
       "properties": {
         "type": { "type": "keyword" },
         "name": { "type": "text" },
         "user_name": { "type": "keyword" },
         "email": { "type": "keyword" },
         "content": { "type": "text" },
         "tweeted_at": { "type": "date" }
       }
     }
   }
 }

OR
 {
   "mappings": {

       "properties": {
         "type": { "type": "keyword" },
         "name": { "type": "text" },
         "user_name": { "type": "keyword" },
         "email": { "type": "keyword" },
         "content": { "type": "text" },
         "tweeted_at": { "type": "date" }
       }
   }
 }

====================================

 PUT http://localhost:9200/twitter/_doc/user-kimchy
 {
   "type": "user",
   "name": "Shay Banon",
   "user_name": "kimchy",
   "email": "shay@kimchy.com"
 }

 PUT http://localhost:9200/twitter/_doc/tweet-1
 {
   "type": "tweet",
   "user_name": "kimchy",
   "tweeted_at": "2017-10-24T09:00:00Z",
   "content": "Types are going away"
 }

 GET twitter/_search
 {
   "query": {
     "bool": {
       "must": {
         "match": {
           "user_name": "kimchy"
         }
       },
       "filter": {
         "match": {
           "type": "tweet"
         }
       }
     }
   }
 }